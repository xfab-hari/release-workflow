name: goreleaser

on:
  push:
    tags:
      - "v[0-9].[0-9]+.[0-9]+"

permissions:
  contents: write
  packages: write

env:
  # This should stay in sync with the version in <REPO_ROOT>/.go-version
  GO_VERSION: "1.23.4"
  # This should stay in sync with the version in <REPO_ROOT>/.golangci-lint-version
  GOLANGCI_LINT_VERSION: "v1.62.2"

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Go
      uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: ${{ env.GOLANGCI_LINT_VERSION }}
        args: --timeout 10m # Set timeout to 10 minutes
        only-new-issues: true

  generate:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Go
      uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Check if "go generate" produces output
      run: ./.github/scripts/go-generate.sh

  tidy:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Go
      uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Check if "go mod tidy" produces output
      run: ./.github/scripts/go-mod-tidy.sh
  test:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Go
      uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run Go tests
      run: go test ./backend/...

  goreleaser:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: ${{ env.GO_VERSION }}

      # - name: Set up Qemu
      #   uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.1

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      # - name: 'Login to GitHub Container Registry'
      #   uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{github.actor}}
      #     password: ${{secrets.GITHUB_TOKEN}}


      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6.1.0
        with:
          distribution: goreleaser
          version: 2
          args: release --clean --release-notes CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  images:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Build and Push Backend Image
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --file Dockerfile \
          --target xfab-backend \
          -t ghcr.io/${{ github.repository_owner }}/release-workflow:latest-backend \
          -t ghcr.io/${{ github.repository_owner }}/release-workflow:${{ github.ref_name }}-backend \
          --push .

    - name: Build and Push Frontend Image
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --file Dockerfile \
          --target xfab-frontend \
          -t ghcr.io/${{ github.repository_owner }}/release-workflow:latest-frontend \
          -t ghcr.io/${{ github.repository_owner }}/release-workflow:${{ github.ref_name }}-frontend \
          --push .